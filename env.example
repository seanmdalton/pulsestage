# Database
# PostgreSQL connection URL with optional connection pool parameters
# For production, add connection pool settings:
#   ?connection_limit=20&pool_timeout=60&connect_timeout=10
# Example production URL:
#   postgresql://user:pass@host:5432/db?connection_limit=20&pool_timeout=60
DATABASE_URL=postgresql://app:app@db:5432/ama

# Admin Authentication
# ⚠️  SECURITY: Generate secure random strings for production!
# Run: cd api && npm run generate-secrets
# Minimum 32 characters required in production
ADMIN_KEY=change-me-to-a-secure-random-string

# API Configuration
PORT=3000

# Environment
# Set to 'development' for:
#   - Disabled rate limiting
#   - Auto-seeded demo users (alice, bob, moderator, admin)
#   - Demo mode authentication (quick login buttons)
#   - Relaxed security for local development
# Set to 'production' for:
#   - Enabled rate limiting
#   - No demo users
#   - Setup wizard on first launch
#   - OAuth-only authentication
#   - Production security settings
NODE_ENV=development

# CORS Configuration
# In development, use http://localhost:5173
# In production, set to your frontend domain
CORS_ORIGIN=http://localhost:5173

# Redis URL (for rate limiting and session storage)
REDIS_URL=redis://redis:6379

# Website Configuration
# This title appears in the browser tab and page titles
WEBSITE_TITLE=PulseStage

# Multi-Tenancy Configuration
# Set to 'true' to enable multi-tenant mode with subdomain routing
# Set to 'false' for single-tenant mode (default, maintains backward compatibility)
MULTI_TENANT_MODE=false

# Base domain for subdomain tenant resolution (required if MULTI_TENANT_MODE=true)
# Example: If BASE_DOMAIN=pulsestage.com, then alpha.pulsestage.com resolves to tenant 'alpha'
# Leave empty for single-tenant mode
BASE_DOMAIN=

# Header name for tenant override (useful for development and testing)
# Clients can send this header to specify which tenant context to use
# Default: x-tenant-id
TENANT_HEADER=x-tenant-id

# SSE (Server-Sent Events) Configuration
# Heartbeat interval in milliseconds to keep SSE connections alive
# Default: 30000 (30 seconds)
SSE_HEARTBEAT_INTERVAL=30000

# Email Configuration
# Email provider: 'smtp' or 'resend'
EMAIL_PROVIDER=smtp

# Email sender address
EMAIL_FROM=noreply@pulsestage.dev
EMAIL_FROM_NAME=PulseStage

# Frontend URL (for email links)
FRONTEND_URL=http://localhost:5173

# SMTP Configuration (if EMAIL_PROVIDER=smtp)
SMTP_HOST=localhost
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=
SMTP_PASS=

# Resend Configuration (if EMAIL_PROVIDER=resend)
# Get your API key from https://resend.com
RESEND_API_KEY=

# Redis Configuration (for email queue)
# Uses same Redis instance as rate limiting
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# Content Moderation (Optional)
# Local filtering is always enabled (no configuration needed)
# Add OpenAI API key for enhanced AI-powered moderation
# Get your API key from https://platform.openai.com/api-keys
# OpenAI Moderation API is very low cost (~$0.002 per 1K tokens)
OPENAI_API_KEY=

# Authentication Configuration
# OAuth credentials are OPTIONAL in development (demo mode works without them)
# OAuth credentials are REQUIRED in production

# GitHub OAuth Configuration (Optional)
# Get credentials from https://github.com/settings/developers
# Callback URL: http://localhost:3000/auth/github/callback (dev)
# Callback URL: https://your-domain.com/auth/github/callback (prod)
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GITHUB_CALLBACK_URL=http://localhost:3000/auth/github/callback

# Google OAuth Configuration (Optional)
# Get credentials from https://console.cloud.google.com/apis/credentials
# Callback URL: http://localhost:3000/auth/google/callback (dev)
# Callback URL: https://your-domain.com/auth/google/callback (prod)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_CALLBACK_URL=http://localhost:3000/auth/google/callback

# Session Configuration
# ⚠️  SECURITY: Generate secure random strings for production!
# Run: cd api && npm run generate-secrets
# Minimum 32 characters required in production
# Used to sign session cookies and CSRF tokens
SESSION_SECRET=change-me-to-a-secure-random-string-for-production
ADMIN_SESSION_SECRET=change-me-to-a-different-secure-random-string
CSRF_SECRET=change-me-to-another-secure-random-string


